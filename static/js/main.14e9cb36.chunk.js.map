{"version":3,"sources":["components/Post.js","components/Header.js","components/PostItem.js","images/close.svg","components/AddPostForm.js","components/EditPostForm.js","components/PostContainer.js","loginPage/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["source","Header","isLogin","setisLogin","handleLogaut","userName","localStorage","setItem","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Button","activeClassName","className","exact","to","onClick","getItem","useStyles","makeStyles","root","width","height","PostItem","title","description","likePost","liked","deletePost","image","togglePopupEdit","handleSelectPost","heartStyles","classes","Card","maxWidth","CardMedia","src","CardContent","gutterBottom","color","CardActions","size","style","fill","AddPostForm","state","handleTitleOnchange","e","setState","target","value","handleImageOnchange","closeEscape","key","props","togglePopupClose","handleDescriptionOnchange","createPost","post","addNewPost","window","addEventListener","this","removeEventListener","class","close","alt","onSubmit","name","novalidate","type","id","minlength","maxlength","required","placeholder","onChange","Component","EditPostForm","selectedPost","savePost","preventDefault","editPost","console","log","Post","popupEdit","popupAdd","blogArr","isPending","temp","axios","put","then","response","data","fetchPost","catch","error","togglePopupAdd","togglePopupCloseEdit","delete","CancelToken","get","cancelToken","token","cancel","isOpacity","blogPost","map","item","opacity","CircularProgress","PostContainer","LoginPage","setUserName","history","useState","login","setLogin","setPassword","push","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14e9cb36.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { posts } from \"../shared/posts\";\r\nimport axios from \"axios\";\r\nimport { PostItem } from './PostItem';\r\nimport { AddPostForm } from './AddPostForm';\r\nimport { EditPostForm } from './EditPostForm';\r\nimport '../components/PlaceList.css';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nlet source;\r\n\r\nexport class Post extends Component {\r\n\r\n    state = {\r\n        popupEdit:false,\r\n        popupAdd: false,\r\n        blogArr: [],\r\n        isPending:false,\r\n        selectedPost:{},\r\n    }\r\n    likePost = (post) => {\r\n        const temp={...post};\r\n        temp.liked = !temp.liked;\r\n        axios.put(`https://617e6ebc2ff7e600174bd7c2.mockapi.io/posts/${post.id}`,temp)\r\n        .then((response)=>{console.log('Пост изменен=>',response.data)\r\n        this.fetchPost()\r\n        }\r\n        )\r\n        .catch((error)=>{\r\n         console.log(error)})\r\n    }\r\n    \r\n\r\n        togglePopupEdit= () => {\r\n            this.setState({\r\n                popupEdit: true\r\n            })\r\n        }\r\n\r\n        togglePopupAdd = () => {\r\n            this.setState({\r\n                popupAdd: true\r\n            })\r\n    }\r\n    togglePopupClose = () => {\r\n        this.setState({\r\n            popupAdd: false,\r\n            })\r\n    }\r\n\r\n    togglePopupCloseEdit = () => {\r\n        this.setState({\r\n            popupEdit: false,\r\n            })\r\n    }\r\n\r\n\r\n    deletePost = (post) => {\r\n        this.setState({\r\n            isPending: true\r\n         })\r\n       axios.delete(`https://617e6ebc2ff7e600174bd7c2.mockapi.io/posts/${post.id}`)\r\n       .then((response)=>{console.log('Пост удален=>',response.data)\r\n       this.fetchPost()\r\n       }\r\n       )\r\n       .catch((error)=>{\r\n        console.log(error)})\r\n    }\r\n \r\nhandleSelectPost=(post)=>{\r\n    this.setState({\r\n        selectedPost:post\r\n    })\r\n}\r\n\r\n    addNewPost=(post)=>{\r\n        this.setState({\r\n            isPending: true\r\n         })\r\n         axios.post('https://617e6ebc2ff7e600174bd7c2.mockapi.io/posts',post)\r\n         .then((response)=>{console.log('Пост добавлен=>',response.data)\r\n         this.fetchPost()\r\n         }\r\n         )\r\n         .catch((error)=>{\r\n          console.log(error)})\r\n    }\r\neditPost=(post)=>{\r\n    this.setState({\r\n        isPending: true\r\n     })\r\n     axios.put(`https://617e6ebc2ff7e600174bd7c2.mockapi.io/posts/${post.id}`,post)\r\n     .then((response)=>{console.log('Пост добавлен=>',response.data)\r\n     this.fetchPost()\r\n     }\r\n     )\r\n     .catch((error)=>{\r\n      console.log(error)})\r\n}\r\n\r\n\r\n    fetchPost=()=>{\r\n      source=axios.CancelToken.source();\r\n        axios.get('https://617e6ebc2ff7e600174bd7c2.mockapi.io/posts',{cancelToken:source.token})\r\n        .then((response)=>{console.log(response.data)\r\n            this.setState({\r\n         blogArr:response.data,\r\n         isPending: false\r\n           }) \r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)})\r\n    }\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n       \r\n    }\r\n    componentWillMount() {\r\n       if(source){\r\n           source.cancel('axios')\r\n       }\r\n       \r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state.selectedPost);\r\n        const isOpacity= this.state.isPending ? 0.5 : 1 ;\r\n        const blogPost = this.state.blogArr.map((item) => {\r\n            if (item!==null){\r\n             return(\r\n            <PostItem\r\n                key={item.id}\r\n                title={item.title}\r\n                description={item.description}\r\n                liked={item.liked}\r\n                likePost={() => this.likePost(item)}\r\n                deletePost={() => this.deletePost(item)}\r\n                image={item.image}\r\n                togglePopupEdit={() =>this.togglePopupEdit()}\r\n                handleSelectPost={()=>this.handleSelectPost(item)}\r\n            />\r\n        )\r\n        }\r\n        })\r\n        \r\n        return (\r\n            <>\r\n            <div className=\"title container\">\r\n            <Button variant=\"outlined\" onClick={this.togglePopupAdd}>Создать пост</Button>\r\n                </div>\r\n                {\r\n                    this.state.popupAdd ?\r\n                        <>\r\n                            <AddPostForm\r\n                            blogArr={this.state.blogArr}\r\n                            togglePopupClose={this.togglePopupClose}\r\n                            addNewPost={this.addNewPost} />\r\n                        </> : null}\r\n                      \r\n                        {\r\n                    this.state.popupEdit ?\r\n                        <>\r\n                            <EditPostForm\r\n                            blogArr={this.state.blogArr}\r\n                            selectedPost={this.state.selectedPost}\r\n                            togglePopupClose={this.togglePopupCloseEdit}\r\n                            editPost={this.editPost} />\r\n                        </> : null\r\n                        }\r\n                      \r\n                \r\n                 <div className=\"places-list\">\r\n                 <div className=\"circular\" style={{opacity: isOpacity}}>\r\n                        {\r\n                       this.state.isPending && <CircularProgress />\r\n                    }</div>\r\n                        {blogPost}\r\n                    \r\n                        </div>\r\n                \r\n                </> \r\n        );\r\n\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport {NavLink} from 'react-router-dom';\r\nexport const Header=({\r\n  isLogin,\r\n  setisLogin,\r\n  userName})=> {\r\nconst handleLogaut=()=>{\r\n  localStorage.setItem('islogin',false);\r\n  setisLogin(false);\r\n}\r\n\r\n  return (\r\n\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Блог\r\n          </Typography>\r\n          {\r\n            isLogin ? \r\n            <>\r\n          <Button >\r\n         \r\n            <nav>\r\n            <NavLink \r\n            activeClassName=\"activeLink\" \r\n            className=\"nav-link\"\r\n             exact to ={'*'}>Главная</NavLink>\r\n            </nav>\r\n            </Button>\r\n            \r\n     <Button>\r\n     <nav>             \r\n <NavLink \r\n onClick={handleLogaut}\r\n\r\n className=\"nav-link\"\r\n  exact to=\"/login\">\r\n    {localStorage.getItem('userName')}\r\n    <LogoutOutlinedIcon/>\r\n    Выход</NavLink>\r\n  \r\n </nav>\r\n  </Button>\r\n  </>\r\n            : \r\n            <>\r\n            <NavLink activeClassName=\"activeLink\"\r\n             className=\"nav-link\"\r\n             exact to =\"/\">Главная</NavLink>\r\n           \r\n            <NavLink \r\n            onClick={handleLogaut}\r\n           \r\n            className=\"nav-link\"\r\n             exact to=\"/login\">\r\n               <LogoutOutlinedIcon/>\r\n               Вход</NavLink>\r\n          </>\r\n           }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 250,\r\n        height: 130,\r\n    },\r\n});\r\n\r\nexport const PostItem = ({\r\n    title,\r\n    description,\r\n    likePost,\r\n    liked,\r\n    deletePost,\r\n    image,\r\n    togglePopupEdit,\r\n    handleSelectPost\r\n }) => {\r\n\r\n    \r\n    const heartStyles = liked ? \"crimson\" : \"black\";\r\n    const classes = useStyles();\r\n\r\nconst showEditForm=()=>{\r\n    togglePopupEdit();\r\n    handleSelectPost();\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Card sx={{ maxWidth: 250 }}>\r\n            <CardMedia>\r\n                <img className={classes.root} src={image} />\r\n            </CardMedia>\r\n\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {description}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\"> <FavoriteIcon onClick={likePost} style={{ fill: heartStyles }} /></Button>\r\n                <Button size=\"small\"> <EditIcon onClick={showEditForm} /></Button>\r\n                <Button size=\"small\"> < DeleteIcon onClick={deletePost} /></Button>\r\n                \r\n            </CardActions>\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/close.8a65f75d.svg\";","import close from \"../images/close.svg\";\r\nimport React, { Component } from 'react';\r\nexport class AddPostForm extends Component{\r\n    state={\r\n        title:'',\r\n        description:'',\r\n        image:''\r\n    }\r\n    handleTitleOnchange=e=>{\r\n        this.setState({\r\n           title:e.target.value,\r\n        \r\n        })\r\n    }\r\n    handleImageOnchange=e=>{\r\n        this.setState({\r\n           image:e.target.value,\r\n        \r\n        })\r\n    }\r\n    closeEscape = (e) => {\r\n        if (e.key === \"Escape\" ) {\r\n            this.props.togglePopupClose();\r\n        }\r\n    }\r\n    handleDescriptionOnchange=e=>{\r\n        this.setState({\r\n           description:e.target.value\r\n        })\r\n    }\r\n    createPost=()=>{\r\n        const post={\r\n          \r\n            title: this.state.title,\r\n            description:this.state.description ,\r\n            liked: false,\r\n            image: this.state.image   \r\n        }\r\n        this.props.addNewPost(post);\r\n        this.props.togglePopupClose();\r\n    }\r\n    componentDidMount() {\r\n       \r\n        window.addEventListener('keyup', this.closeEscape);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keyup', this.closeEscape);\r\n    }\r\n    render(){\r\n    const togglePopupClose= this.props.togglePopupClose;\r\n    \r\n\r\n\r\n    return(\r\n        \r\n          \r\n        <div className=\"popup\">\r\n       \r\n        \r\n        <div class=\"popup__content\">\r\n         \r\n         <img src={close}  onClick={togglePopupClose} alt=\"\" class=\"popup__close\"/>\r\n            \r\n          <h3 class=\"popup__title\">Добавить пост</h3>\r\n          <form class=\"popup__form\"\r\n          onSubmit={this.createPost}\r\n           name=\"new\" novalidate>\r\n           \r\n            <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"title\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n            maxlength=\"30\"\r\n             required placeholder=\"Название поста\"\r\n             value={this.state.title}\r\n             onChange={this.handleTitleOnchange}\r\n             />\r\n             \r\n             \r\n             <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"image\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n          \r\n             required placeholder=\"Ссылка на картинку\"\r\n             value={this.state.image}\r\n             onChange={this.handleImageOnchange}\r\n             />\r\n            <span id=\"name-card-error\" class=\"error\"></span>\r\n          \r\n            <textarea\r\n             type=\"text\"\r\n              id=\"description\"\r\n               name=\"description\"\r\n                class=\"popup__input popup__input_type_link-url\" \r\n                minlength=\"2\"\r\n                 required \r\n                 placeholder=\"Текст поста\"\r\n                 value={this.state.description}\r\n                 onChange={this.handleDescriptionOnchange}\r\n                 \r\n                 />\r\n          \r\n            <span id=\"link-error\" class=\"error\"></span>\r\n            <button type=\"submit\" class=\"button popup__button  popup__button_valid\"  >+</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n}\r\n}","import close from \"../images/close.svg\";\r\nimport React, { Component } from 'react';\r\nexport class EditPostForm extends Component{\r\n    state={\r\n        title:this.props.selectedPost.title,\r\n        description:this.props.selectedPost.description,\r\n        image:this.props.selectedPost.image,\r\n    }\r\n    handleTitleOnchange=e=>{\r\n        this.setState({\r\n           title:e.target.value,\r\n        \r\n        })\r\n    }\r\n    handleImageOnchange=e=>{\r\n        this.setState({\r\n           image:e.target.value,\r\n        \r\n        })\r\n    }\r\n    closeEscape = (e) => {\r\n        if (e.key === \"Escape\" ) {\r\n            this.props.togglePopupClose();\r\n        }\r\n    }\r\n    handleDescriptionOnchange=e=>{\r\n        this.setState({\r\n           description:e.target.value\r\n        })\r\n    }\r\n    \r\n    savePost=(e)=>{\r\n        e.preventDefault();\r\n        const post={\r\n          id:this.props.selectedPost.id,\r\n            title: this.state.title,\r\n            description:this.state.description ,\r\n            liked: this.props.selectedPost.liked,//,беру значения из пропс,чтобы оно не изменялось\r\n            image: this.state.image,\r\n\r\n        }\r\n        this.props.editPost(post);\r\n        this.props.togglePopupClose();\r\n    }\r\n    componentDidMount() {\r\n       \r\n        window.addEventListener('keyup', this.closeEscape);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keyup', this.closeEscape);\r\n    }\r\n    render(){\r\n    const togglePopupClose= this.props.togglePopupClose;\r\n    console.log(this.props)\r\n\r\n\r\n    return(\r\n        \r\n          \r\n        <div className=\"popup\">\r\n       \r\n        \r\n        <div class=\"popup__content\">\r\n         \r\n         <img src={close}  onClick={togglePopupClose} alt=\"\" class=\"popup__close\"/>\r\n            \r\n          <h3 class=\"popup__title\">Добавить пост</h3>\r\n          <form class=\"popup__form\"\r\n          onSubmit={this.savePost}\r\n           name=\"new\" novalidate>\r\n           \r\n            <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"title\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n            maxlength=\"30\"\r\n             required placeholder=\"Название поста\"\r\n             value={this.state.title}\r\n             onChange={this.handleTitleOnchange}\r\n             />\r\n             \r\n             \r\n             <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"image\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n          \r\n             required placeholder=\"Ссылка на картинку\"\r\n             value={this.state.image}\r\n             onChange={this.handleImageOnchange}\r\n             />\r\n            <span id=\"name-card-error\" class=\"error\"></span>\r\n          \r\n            <textarea\r\n             type=\"text\"\r\n              id=\"description\"\r\n               name=\"description\"\r\n                class=\"popup__input popup__input_type_link-url\" \r\n                minlength=\"2\"\r\n                 required \r\n                 placeholder=\"Текст поста\"\r\n                 value={this.state.description}\r\n                 onChange={this.handleDescriptionOnchange}\r\n                 \r\n                 />\r\n          \r\n            <span id=\"link-error\" class=\"error\"></span>\r\n            <button type=\"submit\" class=\"button popup__button  popup__button_valid\"  >+</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n}\r\n}","import React from 'react';\r\nimport {Post} from './Post';\r\n\r\nexport const PostContainer=()=> {\r\n  return (\r\n   <>\r\n      <div className=\"container\">\r\n      <Post/>\r\n    </div>   \r\n     </>\r\n  );\r\n}\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport const LoginPage=({\r\n    setUserName,\r\n    setisLogin,\r\n    history})=>{\r\n\r\nconst handleLogin=(e)=>{\r\n    e.preventDefault();\r\n    \r\n    setisLogin(true);\r\n    localStorage.setItem('userName',login);\r\n    localStorage.setItem('islogin',true);\r\n    history.push('/');\r\n  \r\n}\r\nconst[login,setLogin]=useState('');\r\nconst[password,setPassword]=useState('');\r\nconst handleLoginOnchange=(e)=>{\r\n    \r\n      setLogin(e.target.value) \r\n    \r\n}\r\nconst handlePasswordOnchange=(e)=>{\r\n    \r\n    setPassword(e.target.value) \r\n  \r\n}\r\n\r\n    return(\r\n        \r\n          \r\n        <div className=\"popup\">\r\n       \r\n        \r\n        <div class=\"popup__content\">\r\n         \r\n         <img src  alt=\"\" class=\"popup__close\"/>\r\n            \r\n          <h3 class=\"popup__title\">Авторизация</h3>\r\n          <form class=\"popup__form\"\r\n          onSubmit={handleLogin}\r\n           name=\"new\" novalidate>\r\n           \r\n            <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"title\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n            maxlength=\"30\"\r\n             required placeholder=\"логин\"\r\n             onChange={handleLoginOnchange}\r\n             />\r\n             \r\n             \r\n             <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"image\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n              onChange={handlePasswordOnchange}\r\n             required placeholder=\"Пароль\"\r\n            \r\n             />\r\n            <span id=\"name-card-error\" class=\"error\"></span>\r\n          \r\n         \r\n          \r\n            <span id=\"link-error\" class=\"error\"></span>\r\n            <button type=\"submit\" class=\"button popup__button  popup__button_valid\"   >+</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n}","import {React,useState} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport  {PostContainer} from './components/PostContainer';\r\nimport {LoginPage} from './loginPage/LoginPage';\r\n export const App=()=> {\r\n   const[isLogin,setisLogin]= useState(()=>{\r\n     if(localStorage.getItem('islogin')) return true;\r\n     return false;\r\n   });\r\n   \r\n   const[userName,setUserName]=useState(\"\");\r\n  return (\r\n    <>\r\n  <BrowserRouter>\r\n  \r\n<Header isLogin={isLogin}\r\n setisLogin={setisLogin}\r\n userName={userName} />\r\n\r\n    <div className = \"container\">\r\n    <Switch>\r\n\r\n    <Route path={'*'}  exact component={PostContainer} />\r\n      <Route path={'/login'} exact render={(props)=>(\r\n      <LoginPage  {...props} \r\n      setisLogin={setisLogin} \r\n      setUserName={setUserName} />)} />\r\n      </Switch>\r\n      </div>\r\n     \r\n      </BrowserRouter>\r\n</>\r\n     \r\n     \r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}